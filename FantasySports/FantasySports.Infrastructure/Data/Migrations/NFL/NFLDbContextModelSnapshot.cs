// <auto-generated />
using System;
using FantasySports.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FantasySports.Infrastructure.Data.Migrations.NFL
{
    [DbContext(typeof(NFLDbContext))]
    partial class NFLDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("nfl")
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLFantasyDefenseGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Blockedkickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Blockedkicks")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Defensivetouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypoints")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsdraftkings")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsfanduel")
                        .HasColumnType("text");

                    b.Property<int?>("Fieldgoalreturntouchdowns")
                        .HasColumnType("integer");

                    b.Property<string>("Fumblereturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesrecovered")
                        .HasColumnType("text");

                    b.Property<string>("Homeoraway")
                        .HasColumnType("text");

                    b.Property<string>("Interceptionreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Interceptions")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Kickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Opponent")
                        .HasColumnType("text");

                    b.Property<int>("OpponentId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int?>("Pointsallowed")
                        .HasColumnType("integer");

                    b.Property<int?>("Pointsallowedbydefensespecialteams")
                        .HasColumnType("integer");

                    b.Property<string>("Puntreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Quarterbackhits")
                        .HasColumnType("text");

                    b.Property<int?>("Sacks")
                        .HasColumnType("integer");

                    b.Property<string>("Sackyards")
                        .HasColumnType("text");

                    b.Property<string>("Safeties")
                        .HasColumnType("text");

                    b.Property<int?>("Scoreid")
                        .HasColumnType("integer");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Specialteamstouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Tacklesforloss")
                        .HasColumnType("integer");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<int?>("TeamEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<int?>("Touchdownsscored")
                        .HasColumnType("integer");

                    b.Property<string>("Twopointconversionreturns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Week")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_FantasyDefenseGames_IsDeleted");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TeamEntityId");

                    b.ToTable("FantasyDefenseGames", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLFantasyDefenseGameProjection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Blockedkickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Blockedkicks")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Defensivetouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypoints")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsdraftkings")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsfanduel")
                        .HasColumnType("text");

                    b.Property<int?>("Fieldgoalreturntouchdowns")
                        .HasColumnType("integer");

                    b.Property<string>("Fumblereturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesrecovered")
                        .HasColumnType("text");

                    b.Property<string>("Homeoraway")
                        .HasColumnType("text");

                    b.Property<string>("Interceptionreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Interceptions")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Kickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Opponent")
                        .HasColumnType("text");

                    b.Property<int>("OpponentId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int?>("Pointsallowed")
                        .HasColumnType("integer");

                    b.Property<int?>("Pointsallowedbydefensespecialteams")
                        .HasColumnType("integer");

                    b.Property<string>("Puntreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Quarterbackhits")
                        .HasColumnType("text");

                    b.Property<int?>("Sacks")
                        .HasColumnType("integer");

                    b.Property<string>("Sackyards")
                        .HasColumnType("text");

                    b.Property<string>("Safeties")
                        .HasColumnType("text");

                    b.Property<int?>("Scoreid")
                        .HasColumnType("integer");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Specialteamstouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Tacklesforloss")
                        .HasColumnType("integer");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<int?>("TeamEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<int?>("Touchdownsscored")
                        .HasColumnType("integer");

                    b.Property<string>("Twopointconversionreturns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Week")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_FantasyDefenseGameProjections_IsDeleted");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TeamEntityId");

                    b.ToTable("FantasyDefenseGameProjections", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLFantasyDefenseSeason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Auctionvalue")
                        .HasColumnType("text");

                    b.Property<string>("Auctionvalueppr")
                        .HasColumnType("text");

                    b.Property<decimal?>("Averagedraftposition")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Averagedraftpositionppr")
                        .HasColumnType("numeric");

                    b.Property<string>("Blockedkickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Blockedkicks")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Defensivetouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypoints")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsdraftkings")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsfanduel")
                        .HasColumnType("text");

                    b.Property<int?>("Fieldgoalreturntouchdowns")
                        .HasColumnType("integer");

                    b.Property<string>("Fumblereturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesrecovered")
                        .HasColumnType("text");

                    b.Property<int?>("Games")
                        .HasColumnType("integer");

                    b.Property<string>("Interceptionreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Interceptions")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Kickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int?>("Pointsallowed")
                        .HasColumnType("integer");

                    b.Property<int?>("Pointsallowedbydefensespecialteams")
                        .HasColumnType("integer");

                    b.Property<string>("Puntreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Quarterbackhits")
                        .HasColumnType("text");

                    b.Property<int?>("Sacks")
                        .HasColumnType("integer");

                    b.Property<string>("Sackyards")
                        .HasColumnType("text");

                    b.Property<string>("Safeties")
                        .HasColumnType("text");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Specialteamstouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Tacklesforloss")
                        .HasColumnType("integer");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<string>("Teamid")
                        .HasColumnType("text");

                    b.Property<int?>("Touchdownsscored")
                        .HasColumnType("integer");

                    b.Property<string>("Twopointconversionreturns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_FantasyDefenseSeasons_IsDeleted");

                    b.HasIndex("PlayerId");

                    b.ToTable("FantasyDefenseSeasons", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLFantasyDefenseSeasonProjection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Auctionvalue")
                        .HasColumnType("text");

                    b.Property<string>("Auctionvalueppr")
                        .HasColumnType("text");

                    b.Property<decimal?>("Averagedraftposition")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Averagedraftpositionppr")
                        .HasColumnType("numeric");

                    b.Property<string>("Blockedkickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Blockedkicks")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Defensivetouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypoints")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsdraftkings")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsfanduel")
                        .HasColumnType("text");

                    b.Property<int?>("Fieldgoalreturntouchdowns")
                        .HasColumnType("integer");

                    b.Property<string>("Fumblereturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesrecovered")
                        .HasColumnType("text");

                    b.Property<int?>("Games")
                        .HasColumnType("integer");

                    b.Property<string>("Interceptionreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Interceptions")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Kickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int?>("Pointsallowed")
                        .HasColumnType("integer");

                    b.Property<int?>("Pointsallowedbydefensespecialteams")
                        .HasColumnType("integer");

                    b.Property<string>("Puntreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Quarterbackhits")
                        .HasColumnType("text");

                    b.Property<int?>("Sacks")
                        .HasColumnType("integer");

                    b.Property<string>("Sackyards")
                        .HasColumnType("text");

                    b.Property<string>("Safeties")
                        .HasColumnType("text");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Specialteamstouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Tacklesforloss")
                        .HasColumnType("integer");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<string>("Teamid")
                        .HasColumnType("text");

                    b.Property<int?>("Touchdownsscored")
                        .HasColumnType("integer");

                    b.Property<string>("Twopointconversionreturns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_FantasyDefenseSeasonProjections_IsDeleted");

                    b.HasIndex("PlayerId");

                    b.ToTable("FantasyDefenseSeasonProjections", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Averagedraftposition")
                        .HasColumnType("numeric");

                    b.Property<string>("Birthdate")
                        .HasColumnType("text");

                    b.Property<string>("Byeweek")
                        .HasColumnType("text");

                    b.Property<string>("College")
                        .HasColumnType("text");

                    b.Property<string>("Collegedraftpick")
                        .HasColumnType("text");

                    b.Property<string>("Collegedraftround")
                        .HasColumnType("text");

                    b.Property<string>("Collegedraftteam")
                        .HasColumnType("text");

                    b.Property<string>("Collegedraftyear")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("DraftKingsPlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("Draftkingsname")
                        .HasColumnType("text");

                    b.Property<int?>("Experience")
                        .HasColumnType("integer");

                    b.Property<int>("FanDuelPlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("Fanduelname")
                        .HasColumnType("text");

                    b.Property<string>("Fantasyposition")
                        .HasColumnType("text");

                    b.Property<string>("Firstname")
                        .HasColumnType("text");

                    b.Property<int?>("Height")
                        .HasColumnType("integer");

                    b.Property<string>("Injurystatus")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<bool?>("Isundraftedfreeagent")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Lastname")
                        .HasColumnType("text");

                    b.Property<int?>("NFLTeamId")
                        .HasColumnType("integer");

                    b.Property<int?>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("Photourl")
                        .HasColumnType("text");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("Positioncategory")
                        .HasColumnType("text");

                    b.Property<string>("Status")
                        .HasColumnType("text");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<string>("Teamid")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Players_IsDeleted");

                    b.HasIndex("NFLTeamId");

                    b.HasIndex("PlayerId");

                    b.ToTable("Players", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayerGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Assistedtackles")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extrapointsattempted")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointsmade")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypoints")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsdraftkings")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsfanduel")
                        .HasColumnType("text");

                    b.Property<string>("Fantasyposition")
                        .HasColumnType("text");

                    b.Property<int?>("Fieldgoalsattempted")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade0to19")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade20to29")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade30to39")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade40to49")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade50plus")
                        .HasColumnType("integer");

                    b.Property<string>("Fumblereturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fumbles")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Fumbleslost")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesrecovered")
                        .HasColumnType("text");

                    b.Property<string>("Gamedate")
                        .HasColumnType("text");

                    b.Property<string>("Homeoraway")
                        .HasColumnType("text");

                    b.Property<string>("Injurystatus")
                        .HasColumnType("text");

                    b.Property<string>("Interceptionreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Interceptions")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Kickreturns")
                        .HasColumnType("text");

                    b.Property<string>("Kickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Kickreturnyards")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("NFLFantasyDefenseGameId")
                        .HasColumnType("integer");

                    b.Property<int?>("NFLPlayerGameId")
                        .HasColumnType("integer");

                    b.Property<int?>("NFLTeamGameId")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("Opponent")
                        .HasColumnType("text");

                    b.Property<int>("OpponentId")
                        .HasColumnType("integer");

                    b.Property<string>("Passesdefended")
                        .HasColumnType("text");

                    b.Property<string>("Passingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Passingcompletionpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Passingcompletions")
                        .HasColumnType("text");

                    b.Property<string>("Passinginterceptions")
                        .HasColumnType("text");

                    b.Property<string>("Passinglong")
                        .HasColumnType("text");

                    b.Property<string>("Passingrating")
                        .HasColumnType("text");

                    b.Property<string>("Passingsacks")
                        .HasColumnType("text");

                    b.Property<string>("Passingsackyards")
                        .HasColumnType("text");

                    b.Property<string>("Passingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Passingyards")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardspercompletion")
                        .HasColumnType("text");

                    b.Property<bool?>("Played")
                        .HasColumnType("boolean");

                    b.Property<int>("PlayerGameId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("Positioncategory")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturns")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturnyards")
                        .HasColumnType("text");

                    b.Property<string>("Quarterbackhits")
                        .HasColumnType("text");

                    b.Property<string>("Receivinglong")
                        .HasColumnType("text");

                    b.Property<string>("Receivingtargets")
                        .HasColumnType("text");

                    b.Property<string>("Receivingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Receivingyards")
                        .HasColumnType("text");

                    b.Property<string>("Receivingyardsperreception")
                        .HasColumnType("text");

                    b.Property<string>("Receptions")
                        .HasColumnType("text");

                    b.Property<string>("Rushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Rushinglong")
                        .HasColumnType("text");

                    b.Property<string>("Rushingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyards")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<int?>("Sacks")
                        .HasColumnType("integer");

                    b.Property<string>("Sackyards")
                        .HasColumnType("text");

                    b.Property<int?>("Scoreid")
                        .HasColumnType("integer");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Solotackles")
                        .HasColumnType("text");

                    b.Property<bool?>("Started")
                        .HasColumnType("boolean");

                    b.Property<int?>("Tacklesforloss")
                        .HasColumnType("integer");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<int?>("TeamEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<string>("Twopointconversionpasses")
                        .HasColumnType("text");

                    b.Property<string>("Twopointconversionreceptions")
                        .HasColumnType("text");

                    b.Property<string>("Twopointconversionruns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Week")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_PlayerGames_IsDeleted");

                    b.HasIndex("NFLFantasyDefenseGameId");

                    b.HasIndex("NFLPlayerGameId");

                    b.HasIndex("NFLTeamGameId");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TeamEntityId");

                    b.ToTable("PlayerGames", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayerGameProjection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Assistedtackles")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extrapointsattempted")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointsmade")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypoints")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsdraftkings")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsfanduel")
                        .HasColumnType("text");

                    b.Property<string>("Fantasyposition")
                        .HasColumnType("text");

                    b.Property<int?>("Fieldgoalsattempted")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade0to19")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade20to29")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade30to39")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade40to49")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade50plus")
                        .HasColumnType("integer");

                    b.Property<string>("Fumblereturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fumbles")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Fumbleslost")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesrecovered")
                        .HasColumnType("text");

                    b.Property<string>("Gamedate")
                        .HasColumnType("text");

                    b.Property<string>("Homeoraway")
                        .HasColumnType("text");

                    b.Property<string>("Injurystatus")
                        .HasColumnType("text");

                    b.Property<string>("Interceptionreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Interceptions")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Kickreturns")
                        .HasColumnType("text");

                    b.Property<string>("Kickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Kickreturnyards")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("Opponent")
                        .HasColumnType("text");

                    b.Property<int>("OpponentId")
                        .HasColumnType("integer");

                    b.Property<string>("Passesdefended")
                        .HasColumnType("text");

                    b.Property<string>("Passingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Passingcompletionpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Passingcompletions")
                        .HasColumnType("text");

                    b.Property<string>("Passinginterceptions")
                        .HasColumnType("text");

                    b.Property<string>("Passinglong")
                        .HasColumnType("text");

                    b.Property<string>("Passingrating")
                        .HasColumnType("text");

                    b.Property<string>("Passingsacks")
                        .HasColumnType("text");

                    b.Property<string>("Passingsackyards")
                        .HasColumnType("text");

                    b.Property<string>("Passingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Passingyards")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardspercompletion")
                        .HasColumnType("text");

                    b.Property<bool?>("Played")
                        .HasColumnType("boolean");

                    b.Property<int>("PlayerGameId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("Positioncategory")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturns")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturnyards")
                        .HasColumnType("text");

                    b.Property<string>("Quarterbackhits")
                        .HasColumnType("text");

                    b.Property<string>("Receivinglong")
                        .HasColumnType("text");

                    b.Property<string>("Receivingtargets")
                        .HasColumnType("text");

                    b.Property<string>("Receivingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Receivingyards")
                        .HasColumnType("text");

                    b.Property<string>("Receivingyardsperreception")
                        .HasColumnType("text");

                    b.Property<string>("Receptions")
                        .HasColumnType("text");

                    b.Property<string>("Rushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Rushinglong")
                        .HasColumnType("text");

                    b.Property<string>("Rushingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyards")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<int?>("Sacks")
                        .HasColumnType("integer");

                    b.Property<string>("Sackyards")
                        .HasColumnType("text");

                    b.Property<int?>("Scoreid")
                        .HasColumnType("integer");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Solotackles")
                        .HasColumnType("text");

                    b.Property<bool?>("Started")
                        .HasColumnType("boolean");

                    b.Property<int?>("Tacklesforloss")
                        .HasColumnType("integer");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<int?>("TeamEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<string>("Twopointconversionpasses")
                        .HasColumnType("text");

                    b.Property<string>("Twopointconversionreceptions")
                        .HasColumnType("text");

                    b.Property<string>("Twopointconversionruns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Week")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_PlayerGameProjections_IsDeleted");

                    b.HasIndex("PlayerId");

                    b.HasIndex("TeamEntityId");

                    b.ToTable("PlayerGameProjections", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayerSeason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Assistedtackles")
                        .HasColumnType("text");

                    b.Property<string>("Auctionvalue")
                        .HasColumnType("text");

                    b.Property<string>("Auctionvalueppr")
                        .HasColumnType("text");

                    b.Property<decimal?>("Averagedraftposition")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Averagedraftpositionppr")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extrapointsattempted")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointsmade")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypoints")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsdraftkings")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsfanduel")
                        .HasColumnType("text");

                    b.Property<string>("Fantasyposition")
                        .HasColumnType("text");

                    b.Property<int?>("Fieldgoalsattempted")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade0to19")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade20to29")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade30to39")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade40to49")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade50plus")
                        .HasColumnType("integer");

                    b.Property<string>("Fumblereturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fumbles")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Fumbleslost")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesrecovered")
                        .HasColumnType("text");

                    b.Property<string>("Interceptionreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Interceptions")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Kickreturns")
                        .HasColumnType("text");

                    b.Property<string>("Kickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Kickreturnyards")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("Passesdefended")
                        .HasColumnType("text");

                    b.Property<string>("Passingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Passingcompletionpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Passingcompletions")
                        .HasColumnType("text");

                    b.Property<string>("Passinginterceptions")
                        .HasColumnType("text");

                    b.Property<string>("Passinglong")
                        .HasColumnType("text");

                    b.Property<string>("Passingrating")
                        .HasColumnType("text");

                    b.Property<string>("Passingsacks")
                        .HasColumnType("text");

                    b.Property<string>("Passingsackyards")
                        .HasColumnType("text");

                    b.Property<string>("Passingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Passingyards")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardspercompletion")
                        .HasColumnType("text");

                    b.Property<bool?>("Played")
                        .HasColumnType("boolean");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerSeasonId")
                        .HasColumnType("integer");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("Positioncategory")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturns")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturnyards")
                        .HasColumnType("text");

                    b.Property<string>("Quarterbackhits")
                        .HasColumnType("text");

                    b.Property<string>("Receivinglong")
                        .HasColumnType("text");

                    b.Property<string>("Receivingtargets")
                        .HasColumnType("text");

                    b.Property<string>("Receivingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Receivingyards")
                        .HasColumnType("text");

                    b.Property<string>("Receivingyardsperreception")
                        .HasColumnType("text");

                    b.Property<string>("Receptions")
                        .HasColumnType("text");

                    b.Property<string>("Rushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Rushinglong")
                        .HasColumnType("text");

                    b.Property<string>("Rushingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyards")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<int?>("Sacks")
                        .HasColumnType("integer");

                    b.Property<string>("Sackyards")
                        .HasColumnType("text");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Solotackles")
                        .HasColumnType("text");

                    b.Property<bool?>("Started")
                        .HasColumnType("boolean");

                    b.Property<int?>("Tacklesforloss")
                        .HasColumnType("integer");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<string>("Teamid")
                        .HasColumnType("text");

                    b.Property<string>("Twopointconversionpasses")
                        .HasColumnType("text");

                    b.Property<string>("Twopointconversionreceptions")
                        .HasColumnType("text");

                    b.Property<string>("Twopointconversionruns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_PlayerSeasons_IsDeleted");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerSeasons", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayerSeasonProjection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Assistedtackles")
                        .HasColumnType("text");

                    b.Property<string>("Auctionvalue")
                        .HasColumnType("text");

                    b.Property<string>("Auctionvalueppr")
                        .HasColumnType("text");

                    b.Property<decimal?>("Averagedraftposition")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Averagedraftpositionppr")
                        .HasColumnType("numeric");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extrapointsattempted")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointsmade")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypoints")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsdraftkings")
                        .HasColumnType("text");

                    b.Property<string>("Fantasypointsfanduel")
                        .HasColumnType("text");

                    b.Property<string>("Fantasyposition")
                        .HasColumnType("text");

                    b.Property<int?>("Fieldgoalsattempted")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade0to19")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade20to29")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade30to39")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade40to49")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade50plus")
                        .HasColumnType("integer");

                    b.Property<string>("Fumblereturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Fumbles")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Fumbleslost")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesrecovered")
                        .HasColumnType("text");

                    b.Property<string>("Interceptionreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<int?>("Interceptions")
                        .HasColumnType("integer");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Kickreturns")
                        .HasColumnType("text");

                    b.Property<string>("Kickreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Kickreturnyards")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Number")
                        .HasColumnType("integer");

                    b.Property<string>("Passesdefended")
                        .HasColumnType("text");

                    b.Property<string>("Passingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Passingcompletionpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Passingcompletions")
                        .HasColumnType("text");

                    b.Property<string>("Passinginterceptions")
                        .HasColumnType("text");

                    b.Property<string>("Passinglong")
                        .HasColumnType("text");

                    b.Property<string>("Passingrating")
                        .HasColumnType("text");

                    b.Property<string>("Passingsacks")
                        .HasColumnType("text");

                    b.Property<string>("Passingsackyards")
                        .HasColumnType("text");

                    b.Property<string>("Passingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Passingyards")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardspercompletion")
                        .HasColumnType("text");

                    b.Property<bool?>("Played")
                        .HasColumnType("boolean");

                    b.Property<int>("PlayerId")
                        .HasColumnType("integer");

                    b.Property<int>("PlayerSeasonId")
                        .HasColumnType("integer");

                    b.Property<string>("Position")
                        .HasColumnType("text");

                    b.Property<string>("Positioncategory")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturns")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturntouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Puntreturnyards")
                        .HasColumnType("text");

                    b.Property<string>("Quarterbackhits")
                        .HasColumnType("text");

                    b.Property<string>("Receivinglong")
                        .HasColumnType("text");

                    b.Property<string>("Receivingtargets")
                        .HasColumnType("text");

                    b.Property<string>("Receivingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Receivingyards")
                        .HasColumnType("text");

                    b.Property<string>("Receivingyardsperreception")
                        .HasColumnType("text");

                    b.Property<string>("Receptions")
                        .HasColumnType("text");

                    b.Property<string>("Rushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Rushinglong")
                        .HasColumnType("text");

                    b.Property<string>("Rushingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyards")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<int?>("Sacks")
                        .HasColumnType("integer");

                    b.Property<string>("Sackyards")
                        .HasColumnType("text");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Solotackles")
                        .HasColumnType("text");

                    b.Property<bool?>("Started")
                        .HasColumnType("boolean");

                    b.Property<int?>("Tacklesforloss")
                        .HasColumnType("integer");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<string>("Teamid")
                        .HasColumnType("text");

                    b.Property<string>("Twopointconversionpasses")
                        .HasColumnType("text");

                    b.Property<string>("Twopointconversionreceptions")
                        .HasColumnType("text");

                    b.Property<string>("Twopointconversionruns")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_PlayerSeasonProjections_IsDeleted");

                    b.HasIndex("PlayerId");

                    b.ToTable("PlayerSeasonProjections", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLQuarter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Awayteamscore")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Hometeamscore")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<int?>("Number")
                        .HasColumnType("integer");

                    b.Property<int>("QuarterId")
                        .HasColumnType("integer");

                    b.Property<int>("ScoreId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Quarters_IsDeleted");

                    b.ToTable("Quarters", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLScore", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Awayscore")
                        .HasColumnType("text");

                    b.Property<string>("Awayscoreovertime")
                        .HasColumnType("text");

                    b.Property<string>("Awayscorequarter1")
                        .HasColumnType("text");

                    b.Property<string>("Awayscorequarter2")
                        .HasColumnType("text");

                    b.Property<string>("Awayscorequarter3")
                        .HasColumnType("text");

                    b.Property<string>("Awayscorequarter4")
                        .HasColumnType("text");

                    b.Property<string>("Awayteam")
                        .HasColumnType("text");

                    b.Property<string>("Awayteammoneyline")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Forecastdescription")
                        .HasColumnType("text");

                    b.Property<string>("Forecasttemphigh")
                        .HasColumnType("text");

                    b.Property<string>("Forecasttemplow")
                        .HasColumnType("text");

                    b.Property<string>("Forecastwindchill")
                        .HasColumnType("text");

                    b.Property<string>("Forecastwindspeed")
                        .HasColumnType("text");

                    b.Property<string>("Gamekey")
                        .HasColumnType("text");

                    b.Property<string>("Homescore")
                        .HasColumnType("text");

                    b.Property<string>("Homescoreovertime")
                        .HasColumnType("text");

                    b.Property<string>("Homescorequarter1")
                        .HasColumnType("text");

                    b.Property<string>("Homescorequarter2")
                        .HasColumnType("text");

                    b.Property<string>("Homescorequarter3")
                        .HasColumnType("text");

                    b.Property<string>("Homescorequarter4")
                        .HasColumnType("text");

                    b.Property<string>("Hometeam")
                        .HasColumnType("text");

                    b.Property<string>("Hometeammoneyline")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Neutralvenue")
                        .HasColumnType("text");

                    b.Property<decimal?>("Overpayout")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Overunder")
                        .HasColumnType("numeric");

                    b.Property<int?>("Pointspread")
                        .HasColumnType("integer");

                    b.Property<int>("ScoreId")
                        .HasColumnType("integer");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<int>("StadiumId")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Underpayout")
                        .HasColumnType("numeric");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Week")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Scores_IsDeleted");

                    b.HasIndex("StadiumId");

                    b.ToTable("Scores", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLStadium", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<int?>("Capacity")
                        .HasColumnType("integer");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int?>("Country")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Geolat")
                        .HasColumnType("text");

                    b.Property<string>("Geolong")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Playingsurface")
                        .HasColumnType("text");

                    b.Property<int>("StadiumId")
                        .HasColumnType("integer");

                    b.Property<string>("State")
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Stadiums_IsDeleted");

                    b.HasIndex("StadiumId");

                    b.ToTable("Stadiums", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLStanding", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Conference")
                        .HasColumnType("text");

                    b.Property<string>("Conferencelosses")
                        .HasColumnType("text");

                    b.Property<string>("Conferencerank")
                        .HasColumnType("text");

                    b.Property<string>("Conferenceties")
                        .HasColumnType("text");

                    b.Property<string>("Conferencewins")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Division")
                        .HasColumnType("text");

                    b.Property<string>("Divisionlosses")
                        .HasColumnType("text");

                    b.Property<string>("Divisionrank")
                        .HasColumnType("text");

                    b.Property<string>("Divisionties")
                        .HasColumnType("text");

                    b.Property<string>("Divisionwins")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Losses")
                        .HasColumnType("integer");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Netpoints")
                        .HasColumnType("text");

                    b.Property<decimal?>("Percentage")
                        .HasColumnType("numeric");

                    b.Property<int?>("Pointsagainst")
                        .HasColumnType("integer");

                    b.Property<int?>("Pointsfor")
                        .HasColumnType("integer");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<int?>("TeamEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<string>("Ties")
                        .HasColumnType("text");

                    b.Property<int?>("Touchdowns")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Wins")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Standings_IsDeleted");

                    b.HasIndex("TeamEntityId");

                    b.ToTable("Standings", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<decimal?>("Averagedraftposition")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Averagedraftpositionppr")
                        .HasColumnType("numeric");

                    b.Property<string>("Byeweek")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<string>("Conference")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Division")
                        .HasColumnType("text");

                    b.Property<int>("DraftKingsPlayerId")
                        .HasColumnType("integer");

                    b.Property<string>("Draftkingsname")
                        .HasColumnType("text");

                    b.Property<string>("Fanduelname")
                        .HasColumnType("text");

                    b.Property<string>("Fanduelplayerid")
                        .HasColumnType("text");

                    b.Property<string>("Fullname")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Key")
                        .HasColumnType("text");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Primarycolor")
                        .HasColumnType("text");

                    b.Property<string>("Quaternarycolor")
                        .HasColumnType("text");

                    b.Property<string>("Secondarycolor")
                        .HasColumnType("text");

                    b.Property<int>("StadiumId")
                        .HasColumnType("integer");

                    b.Property<string>("Tertiarycolor")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Wikipedialogourl")
                        .HasColumnType("text");

                    b.Property<string>("Wikipediawordmarkurl")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_Teams_IsDeleted");

                    b.HasIndex("StadiumId");

                    b.ToTable("Teams", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLTeamGame", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Assistedtackles")
                        .HasColumnType("text");

                    b.Property<string>("Completionpercentage")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Dayofweek")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointkickingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointkickingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointpassingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointpassingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointrushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointrushingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointshadblocked")
                        .HasColumnType("text");

                    b.Property<int?>("Fieldgoalattempts")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade")
                        .HasColumnType("integer");

                    b.Property<string>("Firstdowns")
                        .HasColumnType("text");

                    b.Property<string>("Firstdownsbypassing")
                        .HasColumnType("text");

                    b.Property<string>("Firstdownsbypenalty")
                        .HasColumnType("text");

                    b.Property<string>("Firstdownsbyrushing")
                        .HasColumnType("text");

                    b.Property<string>("Fourthdownattempts")
                        .HasColumnType("text");

                    b.Property<string>("Fourthdownconversions")
                        .HasColumnType("text");

                    b.Property<string>("Fourthdownpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Fumbles")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Fumbleslost")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesrecovered")
                        .HasColumnType("text");

                    b.Property<string>("Giveaways")
                        .HasColumnType("text");

                    b.Property<string>("Goaltogoattempts")
                        .HasColumnType("text");

                    b.Property<string>("Goaltogoconversions")
                        .HasColumnType("text");

                    b.Property<string>("Goaltogopercentage")
                        .HasColumnType("text");

                    b.Property<string>("Homeoraway")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Offensiveplays")
                        .HasColumnType("text");

                    b.Property<string>("Offensiveyards")
                        .HasColumnType("text");

                    b.Property<string>("Offensiveyardsperplay")
                        .HasColumnType("text");

                    b.Property<string>("Opponent")
                        .HasColumnType("text");

                    b.Property<int>("OpponentId")
                        .HasColumnType("integer");

                    b.Property<string>("Opponentassistedtackles")
                        .HasColumnType("text");

                    b.Property<string>("Opponentcompletionpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointkickingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointkickingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointpassingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointpassingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointrushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointrushingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointshadblocked")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfieldgoalattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfieldgoalsmade")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfirstdowns")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfirstdownsbypassing")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfirstdownsbypenalty")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfirstdownsbyrushing")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfourthdownattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfourthdownconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfourthdownpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfumbles")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfumbleslost")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfumblesrecovered")
                        .HasColumnType("text");

                    b.Property<string>("Opponentgiveaways")
                        .HasColumnType("text");

                    b.Property<string>("Opponentgoaltogoattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentgoaltogoconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentgoaltogopercentage")
                        .HasColumnType("text");

                    b.Property<string>("Opponentoffensiveplays")
                        .HasColumnType("text");

                    b.Property<string>("Opponentoffensiveyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentoffensiveyardsperplay")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpasserrating")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassesdefended")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingcompletions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassinginterceptions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingyardspercompletion")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpenalties")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpenaltyyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpuntaverage")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpunts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpuntyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentquarterbackhits")
                        .HasColumnType("text");

                    b.Property<string>("Opponentredzoneattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentredzoneconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentredzonepercentage")
                        .HasColumnType("text");

                    b.Property<string>("Opponentrushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentrushingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Opponentrushingyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentrushingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<string>("Opponentsacks")
                        .HasColumnType("text");

                    b.Property<string>("Opponentsackyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscore")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscoreovertime")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscorequarter1")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscorequarter2")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscorequarter3")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscorequarter4")
                        .HasColumnType("text");

                    b.Property<string>("Opponentsolotackles")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttacklesforloss")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttakeaways")
                        .HasColumnType("text");

                    b.Property<string>("Opponentthirddownattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentthirddownconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentthirddownpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttimeofpossession")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttimeofpossessionminutes")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttimeofpossessionseconds")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttimessacked")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttimessackedyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Opponentturnoverdifferential")
                        .HasColumnType("text");

                    b.Property<string>("Passerrating")
                        .HasColumnType("text");

                    b.Property<string>("Passesdefended")
                        .HasColumnType("text");

                    b.Property<string>("Passingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Passingcompletions")
                        .HasColumnType("text");

                    b.Property<string>("Passinginterceptions")
                        .HasColumnType("text");

                    b.Property<string>("Passingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Passingyards")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardspercompletion")
                        .HasColumnType("text");

                    b.Property<string>("Penalties")
                        .HasColumnType("text");

                    b.Property<string>("Penaltyyards")
                        .HasColumnType("text");

                    b.Property<string>("Puntaverage")
                        .HasColumnType("text");

                    b.Property<string>("Punts")
                        .HasColumnType("text");

                    b.Property<string>("Puntyards")
                        .HasColumnType("text");

                    b.Property<string>("Quarterbackhits")
                        .HasColumnType("text");

                    b.Property<string>("Redzoneattempts")
                        .HasColumnType("text");

                    b.Property<string>("Redzoneconversions")
                        .HasColumnType("text");

                    b.Property<string>("Redzonepercentage")
                        .HasColumnType("text");

                    b.Property<string>("Rushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Rushingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyards")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<int?>("Sacks")
                        .HasColumnType("integer");

                    b.Property<string>("Sackyards")
                        .HasColumnType("text");

                    b.Property<int?>("Score")
                        .HasColumnType("integer");

                    b.Property<int?>("Scoreid")
                        .HasColumnType("integer");

                    b.Property<int?>("Scoreovertime")
                        .HasColumnType("integer");

                    b.Property<int?>("Scorequarter1")
                        .HasColumnType("integer");

                    b.Property<int?>("Scorequarter2")
                        .HasColumnType("integer");

                    b.Property<int?>("Scorequarter3")
                        .HasColumnType("integer");

                    b.Property<int?>("Scorequarter4")
                        .HasColumnType("integer");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Solotackles")
                        .HasColumnType("text");

                    b.Property<string>("Stadium")
                        .HasColumnType("text");

                    b.Property<int?>("Tacklesforloss")
                        .HasColumnType("integer");

                    b.Property<string>("Takeaways")
                        .HasColumnType("text");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<int?>("TeamEntityId")
                        .HasColumnType("integer");

                    b.Property<int>("TeamId")
                        .HasColumnType("integer");

                    b.Property<string>("Thirddownattempts")
                        .HasColumnType("text");

                    b.Property<string>("Thirddownconversions")
                        .HasColumnType("text");

                    b.Property<string>("Thirddownpercentage")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Timeofpossession")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Timeofpossessionminutes")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Timeofpossessionseconds")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Timessacked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Timessackedyards")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Totalscore")
                        .HasColumnType("integer");

                    b.Property<int?>("Touchdowns")
                        .HasColumnType("integer");

                    b.Property<string>("Turnoverdifferential")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Week")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_TeamGames_IsDeleted");

                    b.HasIndex("TeamEntityId");

                    b.ToTable("TeamGames", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLTeamSeason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessCount")
                        .HasColumnType("integer");

                    b.Property<string>("Assistedtackles")
                        .HasColumnType("text");

                    b.Property<string>("Completionpercentage")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Extrapointkickingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointkickingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointpassingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointpassingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointrushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointrushingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Extrapointshadblocked")
                        .HasColumnType("text");

                    b.Property<int?>("Fieldgoalattempts")
                        .HasColumnType("integer");

                    b.Property<int?>("Fieldgoalsmade")
                        .HasColumnType("integer");

                    b.Property<string>("Firstdowns")
                        .HasColumnType("text");

                    b.Property<string>("Firstdownsbypassing")
                        .HasColumnType("text");

                    b.Property<string>("Firstdownsbypenalty")
                        .HasColumnType("text");

                    b.Property<string>("Firstdownsbyrushing")
                        .HasColumnType("text");

                    b.Property<string>("Fourthdownattempts")
                        .HasColumnType("text");

                    b.Property<string>("Fourthdownconversions")
                        .HasColumnType("text");

                    b.Property<string>("Fourthdownpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Fumbles")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Fumbleslost")
                        .HasColumnType("text");

                    b.Property<string>("Fumblesrecovered")
                        .HasColumnType("text");

                    b.Property<int?>("Games")
                        .HasColumnType("integer");

                    b.Property<string>("Giveaways")
                        .HasColumnType("text");

                    b.Property<string>("Goaltogoattempts")
                        .HasColumnType("text");

                    b.Property<string>("Goaltogoconversions")
                        .HasColumnType("text");

                    b.Property<string>("Goaltogopercentage")
                        .HasColumnType("text");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime?>("LastAccessedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Offensiveplays")
                        .HasColumnType("text");

                    b.Property<string>("Offensiveyards")
                        .HasColumnType("text");

                    b.Property<string>("Offensiveyardsperplay")
                        .HasColumnType("text");

                    b.Property<string>("Opponentassistedtackles")
                        .HasColumnType("text");

                    b.Property<string>("Opponentcompletionpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointkickingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointkickingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointpassingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointpassingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointrushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointrushingconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentextrapointshadblocked")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfieldgoalattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfieldgoalsmade")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfirstdowns")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfirstdownsbypassing")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfirstdownsbypenalty")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfirstdownsbyrushing")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfourthdownattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfourthdownconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfourthdownpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfumbles")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfumblesforced")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfumbleslost")
                        .HasColumnType("text");

                    b.Property<string>("Opponentfumblesrecovered")
                        .HasColumnType("text");

                    b.Property<string>("Opponentgiveaways")
                        .HasColumnType("text");

                    b.Property<string>("Opponentgoaltogoattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentgoaltogoconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentgoaltogopercentage")
                        .HasColumnType("text");

                    b.Property<string>("Opponentoffensiveplays")
                        .HasColumnType("text");

                    b.Property<string>("Opponentoffensiveyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentoffensiveyardsperplay")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpasserrating")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassesdefended")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingcompletions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassinginterceptions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpassingyardspercompletion")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpenalties")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpenaltyyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpuntaverage")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpunts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentpuntyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentquarterbackhits")
                        .HasColumnType("text");

                    b.Property<string>("Opponentredzoneattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentredzoneconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentredzonepercentage")
                        .HasColumnType("text");

                    b.Property<string>("Opponentrushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentrushingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Opponentrushingyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentrushingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<string>("Opponentsacks")
                        .HasColumnType("text");

                    b.Property<string>("Opponentsackyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscore")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscoreovertime")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscorequarter1")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscorequarter2")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscorequarter3")
                        .HasColumnType("text");

                    b.Property<string>("Opponentscorequarter4")
                        .HasColumnType("text");

                    b.Property<string>("Opponentsolotackles")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttacklesforloss")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttakeaways")
                        .HasColumnType("text");

                    b.Property<string>("Opponentthirddownattempts")
                        .HasColumnType("text");

                    b.Property<string>("Opponentthirddownconversions")
                        .HasColumnType("text");

                    b.Property<string>("Opponentthirddownpercentage")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttimeofpossession")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttimessacked")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttimessackedyards")
                        .HasColumnType("text");

                    b.Property<string>("Opponenttouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Opponentturnoverdifferential")
                        .HasColumnType("text");

                    b.Property<string>("Passerrating")
                        .HasColumnType("text");

                    b.Property<string>("Passesdefended")
                        .HasColumnType("text");

                    b.Property<string>("Passingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Passingcompletions")
                        .HasColumnType("text");

                    b.Property<string>("Passinginterceptions")
                        .HasColumnType("text");

                    b.Property<string>("Passingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Passingyards")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<string>("Passingyardspercompletion")
                        .HasColumnType("text");

                    b.Property<string>("Penalties")
                        .HasColumnType("text");

                    b.Property<string>("Penaltyyards")
                        .HasColumnType("text");

                    b.Property<string>("Puntaverage")
                        .HasColumnType("text");

                    b.Property<string>("Punts")
                        .HasColumnType("text");

                    b.Property<string>("Puntyards")
                        .HasColumnType("text");

                    b.Property<string>("Quarterbackhits")
                        .HasColumnType("text");

                    b.Property<string>("Redzoneattempts")
                        .HasColumnType("text");

                    b.Property<string>("Redzoneconversions")
                        .HasColumnType("text");

                    b.Property<string>("Redzonepercentage")
                        .HasColumnType("text");

                    b.Property<string>("Rushingattempts")
                        .HasColumnType("text");

                    b.Property<string>("Rushingtouchdowns")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyards")
                        .HasColumnType("text");

                    b.Property<string>("Rushingyardsperattempt")
                        .HasColumnType("text");

                    b.Property<int?>("Sacks")
                        .HasColumnType("integer");

                    b.Property<string>("Sackyards")
                        .HasColumnType("text");

                    b.Property<int?>("Score")
                        .HasColumnType("integer");

                    b.Property<int?>("Scoreovertime")
                        .HasColumnType("integer");

                    b.Property<int?>("Scorequarter1")
                        .HasColumnType("integer");

                    b.Property<int?>("Scorequarter2")
                        .HasColumnType("integer");

                    b.Property<int?>("Scorequarter3")
                        .HasColumnType("integer");

                    b.Property<int?>("Scorequarter4")
                        .HasColumnType("integer");

                    b.Property<int?>("Season")
                        .HasColumnType("integer");

                    b.Property<int?>("Seasontype")
                        .HasColumnType("integer");

                    b.Property<string>("Solotackles")
                        .HasColumnType("text");

                    b.Property<int?>("Tacklesforloss")
                        .HasColumnType("integer");

                    b.Property<string>("Takeaways")
                        .HasColumnType("text");

                    b.Property<string>("Team")
                        .HasColumnType("text");

                    b.Property<string>("Teamid")
                        .HasColumnType("text");

                    b.Property<string>("Thirddownattempts")
                        .HasColumnType("text");

                    b.Property<string>("Thirddownconversions")
                        .HasColumnType("text");

                    b.Property<string>("Thirddownpercentage")
                        .HasColumnType("text");

                    b.Property<DateTime?>("Timeofpossession")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Timessacked")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("Timessackedyards")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int?>("Totalscore")
                        .HasColumnType("integer");

                    b.Property<int?>("Touchdowns")
                        .HasColumnType("integer");

                    b.Property<string>("Turnoverdifferential")
                        .HasColumnType("text");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted")
                        .HasDatabaseName("IX_TeamSeasons_IsDeleted");

                    b.ToTable("TeamSeasons", "nfl");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLFantasyDefenseGame", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLPlayer", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FantasySports.Core.Entities.NFL.NFLTeam", "TeamEntity")
                        .WithMany()
                        .HasForeignKey("TeamEntityId");

                    b.Navigation("Player");

                    b.Navigation("TeamEntity");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLFantasyDefenseGameProjection", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLPlayer", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FantasySports.Core.Entities.NFL.NFLTeam", "TeamEntity")
                        .WithMany()
                        .HasForeignKey("TeamEntityId");

                    b.Navigation("Player");

                    b.Navigation("TeamEntity");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLFantasyDefenseSeason", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLPlayer", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLFantasyDefenseSeasonProjection", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLPlayer", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayer", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLTeam", null)
                        .WithMany("Players")
                        .HasForeignKey("NFLTeamId");

                    b.HasOne("FantasySports.Core.Entities.NFL.NFLPlayer", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayerGame", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLFantasyDefenseGame", null)
                        .WithMany("PlayerStats")
                        .HasForeignKey("NFLFantasyDefenseGameId");

                    b.HasOne("FantasySports.Core.Entities.NFL.NFLPlayerGame", null)
                        .WithMany("PlayerStats")
                        .HasForeignKey("NFLPlayerGameId");

                    b.HasOne("FantasySports.Core.Entities.NFL.NFLTeamGame", null)
                        .WithMany("PlayerStats")
                        .HasForeignKey("NFLTeamGameId");

                    b.HasOne("FantasySports.Core.Entities.NFL.NFLPlayer", "Player")
                        .WithMany("GameStats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FantasySports.Core.Entities.NFL.NFLTeam", "TeamEntity")
                        .WithMany()
                        .HasForeignKey("TeamEntityId");

                    b.Navigation("Player");

                    b.Navigation("TeamEntity");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayerGameProjection", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLPlayer", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FantasySports.Core.Entities.NFL.NFLTeam", "TeamEntity")
                        .WithMany()
                        .HasForeignKey("TeamEntityId");

                    b.Navigation("Player");

                    b.Navigation("TeamEntity");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayerSeason", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLPlayer", "Player")
                        .WithMany("SeasonStats")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayerSeasonProjection", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLPlayer", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLScore", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLStadium", "Stadium")
                        .WithMany()
                        .HasForeignKey("StadiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stadium");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLStadium", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLStadium", "Stadium")
                        .WithMany()
                        .HasForeignKey("StadiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stadium");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLStanding", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLTeam", "TeamEntity")
                        .WithMany()
                        .HasForeignKey("TeamEntityId");

                    b.Navigation("TeamEntity");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLTeam", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLStadium", "Stadium")
                        .WithMany()
                        .HasForeignKey("StadiumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stadium");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLTeamGame", b =>
                {
                    b.HasOne("FantasySports.Core.Entities.NFL.NFLTeam", "TeamEntity")
                        .WithMany()
                        .HasForeignKey("TeamEntityId");

                    b.Navigation("TeamEntity");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLFantasyDefenseGame", b =>
                {
                    b.Navigation("PlayerStats");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayer", b =>
                {
                    b.Navigation("GameStats");

                    b.Navigation("SeasonStats");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLPlayerGame", b =>
                {
                    b.Navigation("PlayerStats");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLTeam", b =>
                {
                    b.Navigation("Players");
                });

            modelBuilder.Entity("FantasySports.Core.Entities.NFL.NFLTeamGame", b =>
                {
                    b.Navigation("PlayerStats");
                });
#pragma warning restore 612, 618
        }
    }
}
